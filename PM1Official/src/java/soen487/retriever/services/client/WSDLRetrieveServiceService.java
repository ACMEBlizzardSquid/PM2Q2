
package soen487.retriever.services.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WSDLRetrieveServiceService", targetNamespace = "http://services.retriever.soen487/", wsdlLocation = "http://localhost:8080/PM1Official/WSDLRetrieveServiceService?wsdl")
public class WSDLRetrieveServiceService
    extends Service
{

    private final static URL WSDLRETRIEVESERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException WSDLRETRIEVESERVICESERVICE_EXCEPTION;
    private final static QName WSDLRETRIEVESERVICESERVICE_QNAME = new QName("http://services.retriever.soen487/", "WSDLRetrieveServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/PM1Official/WSDLRetrieveServiceService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSDLRETRIEVESERVICESERVICE_WSDL_LOCATION = url;
        WSDLRETRIEVESERVICESERVICE_EXCEPTION = e;
    }

    public WSDLRetrieveServiceService() {
        super(__getWsdlLocation(), WSDLRETRIEVESERVICESERVICE_QNAME);
    }

    public WSDLRetrieveServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSDLRETRIEVESERVICESERVICE_QNAME, features);
    }

    public WSDLRetrieveServiceService(URL wsdlLocation) {
        super(wsdlLocation, WSDLRETRIEVESERVICESERVICE_QNAME);
    }

    public WSDLRetrieveServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSDLRETRIEVESERVICESERVICE_QNAME, features);
    }

    public WSDLRetrieveServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSDLRetrieveServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WSDLRetrieveService
     */
    @WebEndpoint(name = "WSDLRetrieveServicePort")
    public WSDLRetrieveService getWSDLRetrieveServicePort() {
        return super.getPort(new QName("http://services.retriever.soen487/", "WSDLRetrieveServicePort"), WSDLRetrieveService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSDLRetrieveService
     */
    @WebEndpoint(name = "WSDLRetrieveServicePort")
    public WSDLRetrieveService getWSDLRetrieveServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://services.retriever.soen487/", "WSDLRetrieveServicePort"), WSDLRetrieveService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSDLRETRIEVESERVICESERVICE_EXCEPTION!= null) {
            throw WSDLRETRIEVESERVICESERVICE_EXCEPTION;
        }
        return WSDLRETRIEVESERVICESERVICE_WSDL_LOCATION;
    }

}
